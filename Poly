#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep  8 01:31:10 2017

@author: varun
"""

import pandas as pd
import numpy as np
import seaborn as sb
import matplotlib.pyplot as mp


#importing data from csv files and splitting into dependent x and independent y
dd=pd.read_csv('Position_Salaries.csv')
X=dd.iloc[:,1:2].values
y=dd.iloc[:,2].values

#encoding categorial data (preprocessing)
'''from sklearn.preprocessing import LabelEncoder, OneHotEncoder
laben=LabelEncoder()
onhot=OneHotEncoder(categorical_features=[3])
X[:,3]=laben.fit_transform(X[:,3])
X=onhot.fit_transform(X).toarray()
X=X[: , 1:] '''

#Training and test set is not required and no scaling is also required

from sklearn.linear_model import LinearRegression
lin=LinearRegression()
lin.fit(X,y)


from sklearn.preprocessing import PolynomialFeatures
poly=PolynomialFeatures(degree=4)
X_poly=poly.fit_transform(X)
lim2=LinearRegression()
lim2.fit(X_poly,y)


mp.scatter(X,y)
#mp.plot(X,lin.predict(X),color='green')
mp.plot(X, lim2.predict(poly.fit_transform(X)), color = 'red')


X_grid = np.arange(min(X), max(X), 0.1)
X_grid = X_grid.reshape((len(X_grid), 1))
mp.plot(X_grid, lim2.predict(poly.fit_transform(X_grid)), color = 'red')

lin.predict(6.5)

lim2.predict(poly.fit_transform(6.5))
