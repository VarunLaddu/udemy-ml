#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Sep  7 19:06:09 2017

@author: varun
"""
#importing required packages
import pandas as pd
import numpy as np
import seaborn as sb
import matplotlib.pyplot as mp


#importing data from csv files and splitting into dependent x and independent y
dd=pd.read_csv('50_Startups.csv')
X=dd.iloc[:,:-1].values
y=dd.iloc[:,4].values


#encoding categorial data (preprocessing)
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
laben=LabelEncoder()
onhot=OneHotEncoder(categorical_features=[3])
X[:,3]=laben.fit_transform(X[:,3])
X=onhot.fit_transform(X).toarray()

X=X[: , 1:]

#split dataset into training and testing sets
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.2,random_state=0)


#perfrom regression fir and predict the y value for X_test
from sklearn.linear_model import LinearRegression
lin=LinearRegression()
lin.fit(X_train,y_train)
predic=lin.predict(X_test)

import statsmodels.formula.api as sm
X= np.append(arr=np.ones((50,1)).astype(int), values=X , axis=1)
X_opt=X[:,[0,1,2,3,4,5]]
reg_OLS = sm.OLS(endog=y, exog=X_opt).fit()
reg_OLS.summary()
X_opt=X[:,[0,1,3,4,5]]
reg_OLS = sm.OLS(endog=y, exog=X_opt).fit()
reg_OLS.summary()
X_opt=X[:,[0,3,4,5]]
reg_OLS = sm.OLS(endog=y, exog=X_opt).fit()
reg_OLS.summary()
X_opt=X[:,[0,3,5]]
reg_OLS = sm.OLS(endog=y, exog=X_opt).fit()
reg_OLS.summary()
X_opt=X[:,[0,3]]
reg_OLS = sm.OLS(endog=y, exog=X_opt).fit()
print(reg_OLS.summary()) 